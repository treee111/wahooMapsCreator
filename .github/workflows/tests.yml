name: Run python tests

on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-01:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')
        continue-on-error: true
  pylint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Python Code Quality and Lint
        uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: ". common_python tests"
          use-pylint: true
          use-pycodestyle: false
          use-flake8: false
          use-black: false
          use-mypy: false
          use-isort: false
        continue-on-error: true

  # unittest:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.7]

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pylint pytest
  #         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #     - name: Test with unittest
  #       run: |
  #         python -m unittest discover -s tests
